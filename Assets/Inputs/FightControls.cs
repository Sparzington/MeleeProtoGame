//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/FightControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @FightControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @FightControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""FightControls"",
    ""maps"": [
        {
            ""name"": ""PlayerStance"",
            ""id"": ""f8c04c9a-5958-488d-b81a-07ce765f0b50"",
            ""actions"": [
                {
                    ""name"": ""LightAttack"",
                    ""type"": ""Button"",
                    ""id"": ""c668116e-8503-47a6-828c-ef686f6b9943"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""63aecb9e-5528-45f6-81a0-5f890d7fcfbe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StanceRotate"",
                    ""type"": ""Value"",
                    ""id"": ""032ce7e2-272e-4884-b495-5fff7ffac1e0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e1bbe94e-0eda-4fc3-8b3d-efd09ee0d31b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f786015-51f3-4928-9dcf-c51f78af55d8"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3671a4b-c197-41e0-86ae-fd4b188fb017"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04da0420-ed42-47d9-9008-6f9665b73e98"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b286d28c-a286-40ce-88a7-64d898503786"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""StanceRotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f26b7828-46b1-41b8-8bfc-62e718dae294"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StanceRotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c644d53f-9cfb-41a2-a14a-e8e78bc6364c"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StanceRotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""97781503-5e24-43d9-8668-a7258ed5ed82"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StanceRotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2c0373d7-2085-4a78-8933-86354bf50949"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StanceRotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerStance
        m_PlayerStance = asset.FindActionMap("PlayerStance", throwIfNotFound: true);
        m_PlayerStance_LightAttack = m_PlayerStance.FindAction("LightAttack", throwIfNotFound: true);
        m_PlayerStance_HeavyAttack = m_PlayerStance.FindAction("HeavyAttack", throwIfNotFound: true);
        m_PlayerStance_StanceRotate = m_PlayerStance.FindAction("StanceRotate", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerStance
    private readonly InputActionMap m_PlayerStance;
    private List<IPlayerStanceActions> m_PlayerStanceActionsCallbackInterfaces = new List<IPlayerStanceActions>();
    private readonly InputAction m_PlayerStance_LightAttack;
    private readonly InputAction m_PlayerStance_HeavyAttack;
    private readonly InputAction m_PlayerStance_StanceRotate;
    public struct PlayerStanceActions
    {
        private @FightControls m_Wrapper;
        public PlayerStanceActions(@FightControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LightAttack => m_Wrapper.m_PlayerStance_LightAttack;
        public InputAction @HeavyAttack => m_Wrapper.m_PlayerStance_HeavyAttack;
        public InputAction @StanceRotate => m_Wrapper.m_PlayerStance_StanceRotate;
        public InputActionMap Get() { return m_Wrapper.m_PlayerStance; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerStanceActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerStanceActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerStanceActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerStanceActionsCallbackInterfaces.Add(instance);
            @LightAttack.started += instance.OnLightAttack;
            @LightAttack.performed += instance.OnLightAttack;
            @LightAttack.canceled += instance.OnLightAttack;
            @HeavyAttack.started += instance.OnHeavyAttack;
            @HeavyAttack.performed += instance.OnHeavyAttack;
            @HeavyAttack.canceled += instance.OnHeavyAttack;
            @StanceRotate.started += instance.OnStanceRotate;
            @StanceRotate.performed += instance.OnStanceRotate;
            @StanceRotate.canceled += instance.OnStanceRotate;
        }

        private void UnregisterCallbacks(IPlayerStanceActions instance)
        {
            @LightAttack.started -= instance.OnLightAttack;
            @LightAttack.performed -= instance.OnLightAttack;
            @LightAttack.canceled -= instance.OnLightAttack;
            @HeavyAttack.started -= instance.OnHeavyAttack;
            @HeavyAttack.performed -= instance.OnHeavyAttack;
            @HeavyAttack.canceled -= instance.OnHeavyAttack;
            @StanceRotate.started -= instance.OnStanceRotate;
            @StanceRotate.performed -= instance.OnStanceRotate;
            @StanceRotate.canceled -= instance.OnStanceRotate;
        }

        public void RemoveCallbacks(IPlayerStanceActions instance)
        {
            if (m_Wrapper.m_PlayerStanceActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerStanceActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerStanceActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerStanceActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerStanceActions @PlayerStance => new PlayerStanceActions(this);
    public interface IPlayerStanceActions
    {
        void OnLightAttack(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
        void OnStanceRotate(InputAction.CallbackContext context);
    }
}
