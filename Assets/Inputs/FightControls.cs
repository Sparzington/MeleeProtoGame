//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/FightControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @FightControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @FightControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""FightControls"",
    ""maps"": [
        {
            ""name"": ""PlayerStance"",
            ""id"": ""f8c04c9a-5958-488d-b81a-07ce765f0b50"",
            ""actions"": [
                {
                    ""name"": ""LightAttack"",
                    ""type"": ""Button"",
                    ""id"": ""c668116e-8503-47a6-828c-ef686f6b9943"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""63aecb9e-5528-45f6-81a0-5f890d7fcfbe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StanceRotateMNK"",
                    ""type"": ""Value"",
                    ""id"": ""032ce7e2-272e-4884-b495-5fff7ffac1e0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StanceRotateGP"",
                    ""type"": ""Value"",
                    ""id"": ""bae30882-ba8c-40ca-919a-ff6b6b1bd0fd"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementMNK"",
                    ""type"": ""Value"",
                    ""id"": ""5bf34bb4-1138-46b9-96f2-dc37dd3dd9a0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementGP"",
                    ""type"": ""Value"",
                    ""id"": ""8a3a5786-7406-4a62-a2e5-e0501a9c82fe"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StanceLock"",
                    ""type"": ""Button"",
                    ""id"": ""36111055-2d0a-4664-9c01-80c6698f4a42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e1bbe94e-0eda-4fc3-8b3d-efd09ee0d31b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f786015-51f3-4928-9dcf-c51f78af55d8"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3671a4b-c197-41e0-86ae-fd4b188fb017"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04da0420-ed42-47d9-9008-6f9665b73e98"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""497e700d-4ce3-4d00-a5f8-1d1954ef197e"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StanceRotateMNK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""862a4a75-827f-4697-8098-c06bef8f0350"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StanceRotateGP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f22bee28-9d83-48a1-a326-c4d46a0a563e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementMNK"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""19f719d5-163f-4a39-9394-e9967e22eded"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementMNK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""90ed071f-7e46-457b-87ae-ac98a0286575"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementMNK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c6a41c95-71c0-44be-907c-612c650ecb21"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementMNK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5da7c537-49eb-4cb3-b76e-63bf7fa99304"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementMNK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""505ee1e4-d643-4bf7-80d8-4cba38d10ee9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementGP"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b32f14b5-e7fb-4f93-a6e8-b9e3bcef701d"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementGP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9d29da52-7690-4b68-b6e0-a023335c57c7"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementGP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""07ed5155-2755-4d06-ac39-b62b42d8b638"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementGP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5a2ee804-7823-4779-b5e7-55f675f3c262"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementGP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""349e6609-b608-4830-ac54-ed9853c5e60a"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StanceLock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""788b85b0-0746-4fed-84af-28a64d540c34"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StanceLock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerStance
        m_PlayerStance = asset.FindActionMap("PlayerStance", throwIfNotFound: true);
        m_PlayerStance_LightAttack = m_PlayerStance.FindAction("LightAttack", throwIfNotFound: true);
        m_PlayerStance_HeavyAttack = m_PlayerStance.FindAction("HeavyAttack", throwIfNotFound: true);
        m_PlayerStance_StanceRotateMNK = m_PlayerStance.FindAction("StanceRotateMNK", throwIfNotFound: true);
        m_PlayerStance_StanceRotateGP = m_PlayerStance.FindAction("StanceRotateGP", throwIfNotFound: true);
        m_PlayerStance_MovementMNK = m_PlayerStance.FindAction("MovementMNK", throwIfNotFound: true);
        m_PlayerStance_MovementGP = m_PlayerStance.FindAction("MovementGP", throwIfNotFound: true);
        m_PlayerStance_StanceLock = m_PlayerStance.FindAction("StanceLock", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerStance
    private readonly InputActionMap m_PlayerStance;
    private List<IPlayerStanceActions> m_PlayerStanceActionsCallbackInterfaces = new List<IPlayerStanceActions>();
    private readonly InputAction m_PlayerStance_LightAttack;
    private readonly InputAction m_PlayerStance_HeavyAttack;
    private readonly InputAction m_PlayerStance_StanceRotateMNK;
    private readonly InputAction m_PlayerStance_StanceRotateGP;
    private readonly InputAction m_PlayerStance_MovementMNK;
    private readonly InputAction m_PlayerStance_MovementGP;
    private readonly InputAction m_PlayerStance_StanceLock;
    public struct PlayerStanceActions
    {
        private @FightControls m_Wrapper;
        public PlayerStanceActions(@FightControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LightAttack => m_Wrapper.m_PlayerStance_LightAttack;
        public InputAction @HeavyAttack => m_Wrapper.m_PlayerStance_HeavyAttack;
        public InputAction @StanceRotateMNK => m_Wrapper.m_PlayerStance_StanceRotateMNK;
        public InputAction @StanceRotateGP => m_Wrapper.m_PlayerStance_StanceRotateGP;
        public InputAction @MovementMNK => m_Wrapper.m_PlayerStance_MovementMNK;
        public InputAction @MovementGP => m_Wrapper.m_PlayerStance_MovementGP;
        public InputAction @StanceLock => m_Wrapper.m_PlayerStance_StanceLock;
        public InputActionMap Get() { return m_Wrapper.m_PlayerStance; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerStanceActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerStanceActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerStanceActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerStanceActionsCallbackInterfaces.Add(instance);
            @LightAttack.started += instance.OnLightAttack;
            @LightAttack.performed += instance.OnLightAttack;
            @LightAttack.canceled += instance.OnLightAttack;
            @HeavyAttack.started += instance.OnHeavyAttack;
            @HeavyAttack.performed += instance.OnHeavyAttack;
            @HeavyAttack.canceled += instance.OnHeavyAttack;
            @StanceRotateMNK.started += instance.OnStanceRotateMNK;
            @StanceRotateMNK.performed += instance.OnStanceRotateMNK;
            @StanceRotateMNK.canceled += instance.OnStanceRotateMNK;
            @StanceRotateGP.started += instance.OnStanceRotateGP;
            @StanceRotateGP.performed += instance.OnStanceRotateGP;
            @StanceRotateGP.canceled += instance.OnStanceRotateGP;
            @MovementMNK.started += instance.OnMovementMNK;
            @MovementMNK.performed += instance.OnMovementMNK;
            @MovementMNK.canceled += instance.OnMovementMNK;
            @MovementGP.started += instance.OnMovementGP;
            @MovementGP.performed += instance.OnMovementGP;
            @MovementGP.canceled += instance.OnMovementGP;
            @StanceLock.started += instance.OnStanceLock;
            @StanceLock.performed += instance.OnStanceLock;
            @StanceLock.canceled += instance.OnStanceLock;
        }

        private void UnregisterCallbacks(IPlayerStanceActions instance)
        {
            @LightAttack.started -= instance.OnLightAttack;
            @LightAttack.performed -= instance.OnLightAttack;
            @LightAttack.canceled -= instance.OnLightAttack;
            @HeavyAttack.started -= instance.OnHeavyAttack;
            @HeavyAttack.performed -= instance.OnHeavyAttack;
            @HeavyAttack.canceled -= instance.OnHeavyAttack;
            @StanceRotateMNK.started -= instance.OnStanceRotateMNK;
            @StanceRotateMNK.performed -= instance.OnStanceRotateMNK;
            @StanceRotateMNK.canceled -= instance.OnStanceRotateMNK;
            @StanceRotateGP.started -= instance.OnStanceRotateGP;
            @StanceRotateGP.performed -= instance.OnStanceRotateGP;
            @StanceRotateGP.canceled -= instance.OnStanceRotateGP;
            @MovementMNK.started -= instance.OnMovementMNK;
            @MovementMNK.performed -= instance.OnMovementMNK;
            @MovementMNK.canceled -= instance.OnMovementMNK;
            @MovementGP.started -= instance.OnMovementGP;
            @MovementGP.performed -= instance.OnMovementGP;
            @MovementGP.canceled -= instance.OnMovementGP;
            @StanceLock.started -= instance.OnStanceLock;
            @StanceLock.performed -= instance.OnStanceLock;
            @StanceLock.canceled -= instance.OnStanceLock;
        }

        public void RemoveCallbacks(IPlayerStanceActions instance)
        {
            if (m_Wrapper.m_PlayerStanceActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerStanceActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerStanceActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerStanceActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerStanceActions @PlayerStance => new PlayerStanceActions(this);
    public interface IPlayerStanceActions
    {
        void OnLightAttack(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
        void OnStanceRotateMNK(InputAction.CallbackContext context);
        void OnStanceRotateGP(InputAction.CallbackContext context);
        void OnMovementMNK(InputAction.CallbackContext context);
        void OnMovementGP(InputAction.CallbackContext context);
        void OnStanceLock(InputAction.CallbackContext context);
    }
}
